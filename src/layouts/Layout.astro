---
interface Props {
    title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" id="theme-root">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content="Atick Faisal - Machine Learning Researcher, Robotic Enthusiast and Software Developer" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
        <title>{title}</title>

        <!-- Google Analytics -->
        <script is:inline async src={`https://www.googletagmanager.com/gtag/js?id=${import.meta.env.PUBLIC_GA_MEASUREMENT_ID}`}></script>
        <script is:inline define:vars={{ gaId: import.meta.env.PUBLIC_GA_MEASUREMENT_ID }}>
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}
            gtag('js', new Date());
            gtag('config', gaId);
        </script>
    </head>
    <body class="bg-surface-light dark:bg-surface-dark text-text-light dark:text-text-dark transition-colors duration-300">
        <slot />

        <script is:inline>
            // Dark mode initialization - runs before page render to prevent flash
            const getTheme = () => {
                if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
                    return localStorage.getItem('theme');
                }
                if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
                    return 'dark';
                }
                return 'light';
            };

            const theme = getTheme();
            if (theme === 'dark') {
                document.documentElement.classList.add('dark');
            } else {
                document.documentElement.classList.remove('dark');
            }

            // Make theme available globally
            window.toggleTheme = () => {
                const isDark = document.documentElement.classList.contains('dark');
                if (isDark) {
                    document.documentElement.classList.remove('dark');
                    localStorage.setItem('theme', 'light');
                } else {
                    document.documentElement.classList.add('dark');
                    localStorage.setItem('theme', 'dark');
                }
                // Dispatch event for components that need to react to theme changes
                window.dispatchEvent(new CustomEvent('themechange'));
            };
        </script>
    </body>
</html>
